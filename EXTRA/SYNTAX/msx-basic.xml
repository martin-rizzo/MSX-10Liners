<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language name="MSX-BASIC"
          section="Sources" 
          version="1"
          kateversion="5.0"
          extensions="*.bas;*.asc"
          priority="10"
          indenter="normal"
          author="Martin Rizzo (martinrizzo@gmail.com)"
          >
  <!--
     To active the MSX-BASIC syntax highlighting for kate editor,
     copy this file to
         * [linux]: ~/.local/share/org.kde.syntax-highlighting/syntax/
         * [macOS]: "$HOME/Library/Application Support/katepart5/syntax/"
  -->
  <highlighting>
    
    <contexts>
      
      <context name="Normal" attribute="Normal" lineEndContext="#stay">
          <RegExpr String="[0-9]{6,}"  attribute="Error"       context="Statements" />
          <RegExpr String="[0-9]{0,5}" attribute="Line Number" context="Statements" />
      </context>
      
      <context name="Statements" attribute="Error" lineEndContext="#pop" >
        <IncludeRules context="Commands" />
        <RegExpr      String="[A-Z]"  lookAhead="true"   context="Assignment" insensitive="true" />
        <DetectSpaces                 attribute="Normal" context="#stay" />
      </context>
      
<!--
==============================================================================================
                                      COMMANDS
==============================================================================================
-->
      
      <context name="Commands" >
        <DetectChar char=":" attribute="Line Separator" context="#stay"           />
        <DetectChar char="'" attribute="Remark"         context="Inside Remark"   />
        <DetectChar char="_" attribute="Command"        context="CALL Parameters" />
        <StringDetect String="BEEP"     attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="BLOAD"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="BSAVE"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="CALL"     attribute="Command" context="CALL Parameters"          insensitive="true" />
        <StringDetect String="CIRCLE"   attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <StringDetect String="CLEAR"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="CLOAD?"   attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="CLOAD"    attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="CLOSE"    attribute="Command" context="File Number Parameters"   insensitive="true" />
        <StringDetect String="CLS"      attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="COLOR"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="CSAVE"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="DATA"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="DEFDBL"   attribute="Command" context="DEFINT Parameters"        insensitive="true" />
        <StringDetect String="DEFINT"   attribute="Command" context="DEFINT Parameters"        insensitive="true" />
        <StringDetect String="DEFSNG"   attribute="Command" context="DEFINT Parameters"        insensitive="true" />
        <StringDetect String="DEFSTR"   attribute="Command" context="DEFINT Parameters"        insensitive="true" />
        <StringDetect String="DEF"      attribute="Command" context="DEF Parameters"           insensitive="true" />
        <StringDetect String="DIM"      attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="DRAW"     attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="ELSE"     attribute="Flow"    context="#stay"                    insensitive="true" />
        <StringDetect String="END"      attribute="Flow"    context="Line Finished"            insensitive="true" />
        <StringDetect String="ERASE"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="ERROR"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="FOR"      attribute="Flow"    context="FOR Parameters"           insensitive="true" />
        <StringDetect String="FILES"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="GOSUB"    attribute="Flow"    context="Line Number"              insensitive="true" />
        <StringDetect String="GOTO"     attribute="Flow"    context="Line Number"              insensitive="true" />
        <StringDetect String="IF"       attribute="Flow"    context="IF Parameters"            insensitive="true" />
        <StringDetect String="INPUT"    attribute="Command" context="Hash+Command Parameters"  insensitive="true" />
        <StringDetect String="INTERVAL" attribute="Command" context="ON|OFF|STOP"              insensitive="true" />
        <StringDetect String="KEY"      attribute="Command" context="KEY Parameters"           insensitive="true" />
        <StringDetect String="LET"      attribute="Command" context="Assignment"               insensitive="true" />
        <StringDetect String="LINE"     attribute="Command" context="LINE Subcommands"         insensitive="true" />
        <StringDetect String="LIST"     attribute="Command" context="Line Number Range"        insensitive="true" />
        <StringDetect String="LLIST"    attribute="Command" context="Line Number Range"        insensitive="true" />
        <StringDetect String="LOAD"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="LOCATE"   attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="LPRINT"   attribute="Command" context="PRINT Parameters"         insensitive="true" />
        <StringDetect String="MERGE"    attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="MID$("    attribute="Command" context="Params+Equal+Expr"        insensitive="true" />
        <StringDetect String="MOTOR"    attribute="Command" context="ON|OFF"                   insensitive="true" />
        <StringDetect String="NEW"      attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="NEXT"     attribute="Flow"    context="Var Parameters"           insensitive="true" />
        <StringDetect String="ON"       attribute="Command" context="ON Subcommands"           insensitive="true" />
        <StringDetect String="OPEN"     attribute="Command" context="OPEN Parameters"          insensitive="true" />
        <StringDetect String="OUT"      attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="PAINT"    attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <StringDetect String="PLAY"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="POKE"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="PRESET"   attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <StringDetect String="PRINT"    attribute="Command" context="PRINT Parameters"         insensitive="true" />
        <StringDetect String="PSET"     attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <StringDetect String="PUT"      attribute="Command" context="PUT Subcommands"          insensitive="true" />
        <StringDetect String="READ"     attribute="Command" context="Var Parameters"           insensitive="true" />
        <StringDetect String="REM"      attribute="Remark"  context="Inside Remark"            insensitive="true" />
        <StringDetect String="RENUM"    attribute="Command" context="Line Number List"         insensitive="true" />
        <StringDetect String="RESTORE"  attribute="Command" context="Op Line Number"           insensitive="true" />
        <StringDetect String="RESUME"   attribute="Flow"    context="Op Line Number|Next"      insensitive="true" />
        <StringDetect String="RUN"      attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="SAVE"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SCREEN"   attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SOUND"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SPRITE$(" attribute="Command" context="Index+Equal+Expr"         insenstivie="true" />
        <StringDetect String="SPRITE"   attribute="Command" context="ON|OFF|STOP"              insensitive="true" />
        <StringDetect String="STOP"     attribute="Command" context="ON|OFF|STOP"              insensitive="true" />
        <StringDetect String="STRIG("   attribute="Command" context="Index+ON|OFF|STOP"        insensitive="true" />
        <StringDetect String="SWAP"     attribute="Command" context="Var Parameters"           insensitive="true" />
        <StringDetect String="TROFF"    attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="TRON"     attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="VPOKE"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="WAIT"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="WIDTH"    attribute="Command" context="1 Command Parameter"      insensitive="true" />
      </context>
      <context name="LINE Subcommands" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
        <AnyChar      String="-S("      lookAhead="true"    context="#pop!Coord+Command Parameters" insensitive="true" />
        <StringDetect String="INPUT"    attribute="Command" context="#pop!Hash+Command Parameters"  insensitive="true" />
        <DetectSpaces                   attribute="Normal"  context="#stay" />
      </context>
      <context name="ON Subcommands" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Expression+Go+Line Number List" >
        <StringDetect String="ERROR"    attribute="Command" context="Goto+Line Number"             insensitive="true" />
        <StringDetect String="INTERVAL" attribute="Command" context="Expression+Gosub+Line Number" insensitive="true" />
        <StringDetect String="KEY"      attribute="Command" context="Gosub+Line Number List"       insensitive="true" />
        <StringDetect String="SPRITE"   attribute="Command" context="Gosub+Line Number"            insensitive="true" />
        <StringDetect String="STOP"     attribute="Command" context="Gosub+Line Number"            insensitive="true" />
        <StringDetect String="STRIG"    attribute="Command" context="Gosub+Line Number List"       insensitive="true" />
        <DetectSpaces                   attribute="Normal"  context="#stay" />
      </context>
      <context name="PUT Subcommands" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
        <StringDetect String="SPRITE"   attribute="Command" context="#pop!Command Parameters" insensitive="true" />
        <DetectSpaces                   attribute="Normal"  context="#stay" />
      </context>
      
<!--
==============================================================================================
                                        FUNCTIONS
==============================================================================================
-->
      
      <context name="Functions" lineEndContext="#pop" >
        <StringDetect String="ABS("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="ASC("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="ATN("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="BASE("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="BIN$("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="CDBL("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="CHR$("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="CINT("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="COS("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="CSNG("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="EOF("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="EXP("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="FIX("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="FN"  attribute="User Function" context="FN Function Parameters" insensitive="true" />
        <StringDetect String="FRE("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="HEX$("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="INP("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="INPUT$("  attribute="Function" context="Function Parameters"    insensitive="true" />
        <StringDetect String="INSTR("   attribute="Function" context="Function Parameters"    insensitive="true" />
        <StringDetect String="INT("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="LEFT$("   attribute="Function" context="Function Parameters"    insensitive="true" />
        <StringDetect String="LEN("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="LOG("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="LPOS("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="MID$("    attribute="Function" context="Function Parameters"    insensitive="true" />
        <StringDetect String="OCT$("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="PAD("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="PDL("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="PEEK("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="PLAY("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="POINT"    attribute="Function" context="Coord"                  insensitive="true" />
        <StringDetect String="POS("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="RIGHT$("  attribute="Function" context="Function Parameters"    insensitive="true" />
        <StringDetect String="RND("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="SGN("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="SIN("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="SPACE$("  attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <!-- SPC ?? -->
        <StringDetect String="SPRITE$(" attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="SQR("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="STICK("   attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="STR$("    attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="STRIG("   attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="STRING$(" attribute="Function" context="Function Parameters"    insensitive="true" />
        <!-- TAB ?? -->
        <StringDetect String="TAN("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <!-- USR<Number>(x) -->
        <StringDetect String="VAL("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <!-- VARPTR(<VariableName>) VARPTR(#<FileNumber>) -->
        <StringDetect String="VDP("     attribute="Function" context="1 Function Parameter"   insensitive="true" />
        <StringDetect String="VPEEK("   attribute="Function" context="1 Function Parameter"   insensitive="true" />
      </context>
      
<!--
==============================================================================================
                                   GENERIC PARAMETERS
==============================================================================================
-->
      
      <!-- 1 COMMAND PARAMETER -->
      <context name="1 Command Parameter" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar char="," attribute="Error" context="#pop!Fatal Error" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- MULTIPLE COMMAND PARAMETERS -->
      <context name="Command Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="," attribute="Separator" context="#stay" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- 1 FUNCTION PARAMETER -->
      <context name="1 Function Parameter" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char=")" attribute="Function" context="#pop"                     />
          <DetectChar   char="," attribute="Error"    context="#pop!Error Until Bracket" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- MULTIPLE FUNCTION PARAMETERS -->
      <context name="Function Parameters" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar char=")" attribute="Function"  context="#pop"  />
          <DetectChar char="," attribute="Separator" context="#stay" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- VAR PARAMETERS (MULTIPLE PARAMETERS BUT ALL OF THEM ARE VARIABLE NAMES) -->
      <context name="Var Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char=","            attribute="Separator"      context="#stay"                                   />
          <RegExpr      String="[A-Z]"      attribute="Variable"       context="Inside Variable Name" insensitive="true" />
          <RegExpr      String="[^\s:,]+"   attribute="Error"          context="#stay"                                   />
      </context>
      
      <!-- FILE NUMBER PARAMETERS (MULTIPLE PARAMETERS BUT ALL OF THEM ARE FILE NUMBERS) -->
      <context name="File Number Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="[0-9#]" lookAhead="true"      context="File Number" />
          <DetectChar   char=","        attribute="Separator" context="#stay"       />
          <DetectSpaces                 attribute="Normal"    context="#stay"       />
      </context>
      
      <!-- STEP(x,y)-STEP(x,y) #pop -->
      <context name="Coord" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectSpaces                 attribute="Normal"         context="#stay"               />
          <StringDetect String="STEP("  attribute="Function"       context="Function Parameters" />
          <StringDetect String="("      attribute="Function"       context="Function Parameters" />
          <DetectChar   char="-"        attribute="Function"       context="#stay"               />
      </context>
      
      <!-- STEP(x,y)-STEP(x,y) + COMMAND PARAMETERS #pop -->
      <context name="Coord+Command Parameters" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Command Parameters" >
          <IncludeRules context="Coord" />
      </context>
      
      <!-- OPTIONAL "#" + COMMAND PARAMETERS -->
      <context name="Hash+Command Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char="#"       attribute="Number" context="#pop!Command Parameters" />
          <RegExpr    String="[^\s]" lookAhead="true"   context="#pop!Command Parameters" />
      </context>
      
      <!-- "ON" OR "OFF" OR <nothing> -->
      <context name="ON|OFF" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="ON"  attribute="Constant" context="Line Finished" insensitive="true" />
          <StringDetect String="OFF" attribute="Constant" context="Line Finished" insensitive="true" />
          <DetectSpaces              attribute="Normal"   context="#stay" />
      </context>
      
      <!-- "ON" OR "OFF" OR "STOP" OR <nothing> -->
      <context name="ON|OFF|STOP" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <IncludeRules context="ON|OFF" />
          <StringDetect String="STOP" attribute="Constant" context="Line Finished" insensitive="true" />
      </context>
      
      <!-- (INDEX) ON / OFF / STOP PARAMETERS -->
      <context name="Index+ON|OFF|STOP" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Command" context="#pop!ON|OFF|STOP" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- (INDEX) = EXPRESSION -->
      <context name="Index+Equal+Expr" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <DetectChar char=")"  attribute="Command" context="#pop!Equal|Expression" />
          <DetectSpaces         attribute="Normal"  context="#stay"                 />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- (param,param,..) = EXPRESSION -->
      <context name="Params+Equal+Expr" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <DetectChar char=")" attribute="Command"   context="#pop!Equal|Expression" />
          <DetectChar char="," attribute="Separator" context="#stay"                 />
          <DetectSpaces        attribute="Normal"    context="#stay"                 />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- <expression> GOSUB <line-number> -->
      <context name="Expression+Gosub+Line Number" lineEndContext="#pop" >
          <StringDetect String="GOSUB" attribute="Command" context="#pop!Line Number" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- <expression> GOTO/GOSUB <line-number>, <line-number>, ... -->
      <context name="Expression+Go+Line Number List" attribute="Normal" lineEndContext="#pop" >
          <StringDetect String="GOTO"  attribute="Command" context="#pop!Line Number List" />
          <StringDetect String="GOSUB" attribute="Command" context="#pop!Line Number List" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- LINE NUMBER (AS THE ONLY PARAMETER) -->
      <context name="Line Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <RegExpr    String="[0-9]{6,}"  attribute="Error"       context="#pop!Fatal Error"   />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number" context="#pop!Line Finished" />
          <DetectSpaces                   attribute="Normal"      context="#stay"              />
      </context>
      
      <!-- LINE NUMBER LIST (LINE1, LINE2, LINE3, ...) -->
      <context name="Line Number List" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="[0-9]{6,}"   attribute="Error"       context="#stay" />
          <RegExpr      String="[0-9]{0,5}"  attribute="Line Number" context="#stay" />
          <DetectChar   char=","             attribute="Separator"   context="#stay" />
          <DetectSpaces                      attribute="Normal"      context="#stay" />
      </context>
      
      <!-- LINE NUMBER RANGE (START - END) -->
      <context name="Line Number Range" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="[0-9]{6,}"  attribute="Error"          context="#stay" />
          <RegExpr      String="[0-9]{0,5}" attribute="Line Number"    context="#stay" />
          <DetectChar   char="-"            attribute="Operator"       context="#stay" />
          <DetectSpaces                     attribute="Normal"         context="#stay" />
      </context>
      
      <!-- OPTIONAL LINE NUMBER (AS THE ONLY PARAMETER) -->
      <context name="Op Line Number" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <IncludeRules context="Line Number" />
      </context>
      
      <!-- OPTIONAL LINE NUMBER OR "NEXT" (AS THE ONLY PARAMETER) -->
      <context name="Op Line Number|Next" attribute="Normal" lineEndContext="#pop" >
          <StringDetect String="NEXT"  attribute="Constant" context="#pop!Line Finished" insensitive="true" />
          <IncludeRules context="Op Line Number" />
      </context>
      
      <!-- GOTO <line-number> -->
      <context name="Goto+Line Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <StringDetect String="GOTO" attribute="Command" context="#pop!Line Number" />
          <DetectSpaces               attribute="Normal"  context="#stay"            />
      </context>
      
      <!-- GOSUB <line-number> -->
      <context name="Gosub+Line Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <StringDetect String="GOSUB" attribute="Command" context="#pop!Line Number" />
          <DetectSpaces                attribute="Normal"  context="#stay"            />
      </context>
      
      <!-- GOSUB <line-number>, <line-number>, ... -->
      <context name="Gosub+Line Number List" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <StringDetect String="GOSUB" attribute="Command" context="#pop!Line Number List" />
          <DetectSpaces                attribute="Normal"  context="#stay"                 />
      </context>
      
<!--
==============================================================================================
                                 COMMAND SPECIFIC PARAMETERS
==============================================================================================
-->
      
      <!-- "CALL" PARAMETERS -->
      <context name="CALL Parameters" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="[A-Z][A-Z0-9]*" attribute="Command" context="#pop!CALL CMD (Parameters)" />
      </context>
      <context name="CALL CMD (Parameters)" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!CALL CMD Parameters" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar char="(" attribute="Command"        context="#pop!CALL CMD Parameters" />
          <DetectSpaces        attribute="Normal"         context="#stay"                    />
      </context>
      <context name="CALL CMD Parameters" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar  char=")"  attribute="Command"   context="#pop" />
          <DetectChar  char=","  attribute="Separator" context="#stay" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- "DEFINT"/"DEFSNG"/"DEFDLB"/"DEFSTR" PARAMETERS (EXAMPLE: I-N,W-Z) -->
      <context name="DEFINT Parameters" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="-"                     attribute="Operator"  context="#stay" />
          <DetectChar   char=","                     attribute="Separator" context="#stay" />
          <RegExpr      String="[A-Z]{2,}+[\s\-\,:]" attribute="Error"     context="#stay" insensitive="true" />
          <RegExpr      String="[A-Z]"               attribute="Variable"  context="#stay" insensitive="true" />
          <DetectSpaces                              attribute="Normal"    context="#stay" />
      </context>
      
      <!-- "DEF FNxxx" PARAMETERS -->
      <context name="DEF Parameters" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="FN" attribute="User Function" context="#pop!DEF:Name+Params+Equal+Expr" />
          <DetectSpaces             attribute="Normal"        context="#stay"                           />
      </context>
      <context name="DEF:Name+Params+Equal+Expr" attribute="Error" lineEndContext="#pop" >
          <RegExpr      String="[A-Z][0-9A-Z]*\$?" attribute="User Function" context="#pop!DEF:Params+Equal+Expr" />
          <DetectSpaces                            attribute="Normal"        context="#stay"                      />
      </context>
      <context name="DEF:Params+Equal+Expr" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="(" attribute="User Function" context="#pop!Params+Equal+Expr" />
          <DetectChar   char="=" attribute="Operator"      context="#pop!Expression"        />
          <DetectSpaces          attribute="Normal"        context="#stay"                  />
      </context>
      
      <!-- "FN" FUNCTION PARAMETERS -->
      <context name="FN Function Parameters" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="[A-Z][0-9A-Z]*" attribute="User Function" context="#pop!FN/Optional User Parameters" insensitive="true" />
          <DetectSpaces                       attribute="Normal"        context="#stay" />
      </context>
      <context name="FN/Optional User Parameters" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop"  >
          <DetectChar char="(" attribute="User Function"  context="#pop!Function Parameters" />
          <DetectSpaces        attribute="Normal"         context="#stay"                    />
      </context>
      
      <!-- "FOR" PARAMETERS (INCLUDING "TO" and "STEP") -->
      <context name="FOR Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="="         attribute="Operator" context="#pop!FOR/Start Value"                                 />
          <RegExpr      String="[A-Z]"   attribute="Variable" context="Inside Simple Variable Name" insensitive="true" />
          <RegExpr      String="[^\s:]+" attribute="Error"    context="#stay"                                          />
      </context>
      <context name="FOR/Start Value" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="="    attribute="Error"   context="#stay"                           />
          <StringDetect String="TO" attribute="Opeator" context="#pop!FOR/End Value" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      <context name="FOR/End Value" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="STEP" attribute="Flow" context="#pop!Expression" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- "IF" PARAMETERS (INCLUDING "THEN/GOTO" and "ELSE") -->
      <context name="IF Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="THEN" attribute="Flow"  context="#pop!IF Then" insensitive="true" />
          <StringDetect String="GOTO" attribute="Flow"  context="#pop!IF Goto" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      <context name="IF Then" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop"  >
          <AnyChar String="0123456789" lookAhead="true"   context="#pop!IF Goto" />
          <DetectSpaces                attribute="Normal" context="#stay"        />
      </context>
      <context name="IF Goto" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr    String="[0-9]{6,}"  attribute="Error"       context="#pop!Line Finished" />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number" context="#pop!Line Finished" />
          <RegExpr    String="[^\s:]+"    attribute="Error"       context="#pop!Fatal Error"   />
      </context>
      
      <!-- "KEY" PARAMETERS -->
      <context name="KEY Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="ON"      attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="OFF"     attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="LIST"    attribute="Constant"       context="#stay" insensitive="true" />
          <DetectChar   char="("         attribute="Command"        context="#pop!Index+ON|OFF|STOP"   />
          <RegExpr      String="[0-9]+"  attribute="Normal"         context="#pop!Command Parameters"  />
          <RegExpr      String="[^\s:]+" attribute="Error"          context="#stay" />
      </context>
      
      <!-- "OPEN" PARAMETERS -->
      <context name="OPEN Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="(FOR|AS|LENGTH)" lookAhead="true"           context="OPEN:Last Parameters" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      <context name="OPEN:Last Parameters" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <StringDetect String="FOR" attribute="Command" context="OPEN:Direction" insensitive="true" />
          <StringDetect String="AS"  attribute="Command" context="File Number"    insensitive="true" />
          <StringDetect String="LEN" attribute="Command" context="OPEN:Length"    insensitive="true" />
      </context>
      <context name="OPEN:Direction" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <RegExpr      String="(OUTPUT|INPUT|APPEND)" attribute="Constant" context="#pop"  />
          <DetectSpaces                                attribute="Normal"   context="#stay" />
      </context>
      <context name="OPEN:Length" attribute="Error" lineEndContext="#pop" >
          <DetectChar   char="=" attribute="Command" context="#pop!Expression" />
          <DetectSpaces          attribute="Normal"  context="#stay"           />
      </context>
      
      <!-- "PRINT" PARAMETERS -->
      <context name="PRINT Parameters" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!PRINT/Text" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="#"       lookAhead="true"      context="File Number"                         />
          <StringDetect String="USING" attribute="Command"   context="#pop!PRINT/USING" insensitive="true" />
          <DetectChar   char=","       attribute="Separator" context="#stay"                               />
          <DetectSpaces                attribute="Normal"    contest="#stay"                               />
      </context>
      <context name="PRINT/USING" attribute="Error" lineEndContext="#pop" >
          <DetectChar   char=";" attribute="Operator" context="#pop!PRINT/Text" />
          <IncludeRules context="Expression" />
      </context>
      <context name="PRINT/Text" lineEndContext="#pop" >
          <IncludeRules context="Expression" />
      </context>
      
<!--
==============================================================================================
                                   EXPRESSIONS
==============================================================================================
-->
      
      <!-- EXPRESSION -->
      <context name="Expression" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char=")"        attribute="Operator"      context="#pop"       />
          <DetectChar   char="("        attribute="Operator"      context="Expression" />
          <IncludeRules context="Operators" />
          <IncludeRules context="Functions" />
          <StringDetect String="TO"     attribute="Error"         context="#stay"                insensitive="true" />
          <StringDetect String="&amp;H" attribute="Hex Number"    context="Inside Hex Number"    insensitive="true" />
          <StringDetect String="&amp;O" attribute="Octal Number"  context="Inside Octal Number"  insensitive="true" />
          <StringDetect String="&amp;B" attribute="Binary Number" context="Inside Binary Number" insensitive="true" />
          <RegExpr      String="[+-]?[0-9]*\.?[0-9]+([ED][-+]?[0-9]+)?[#!]?" attribute="Number"   context="#stay"                insensitive="true" />
          <RegExpr      String="[A-Z]"                                       attribute="Variable" context="Inside Variable Name" insensitive="true" />
          <DetectChar   char='"'                                             attribute="String"   context="Inside String"                           />
          <DetectSpaces attribute="Normal" context="#stay" />
      </context>
      
      <!-- OPERATORS -->
      <!-- it's only to be included in other contexts -->
      <context name="Operators" >
          <AnyChar String="+-*/^\=&lt;&gt;" attribute="Operator" context="#stay" />
          <StringDetect String="OR"  attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="AND" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="XOR" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="NOT" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="EQV" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="IMP" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="MOD" attribute="Operator" context="#stay" insensitive="true" />
      </context>
      
      <!-- "= EXPRESSION" -->
      <context name="Equal|Expression" attribute="Normal" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="="         attribute="Operator" context="#pop!Expression" />
          <DetectChar   String="[^\s:]+" attribute="Error"    context="#stay"           />
      </context>
      
      <!-- ASSIGNMENT -->
      <context name="Assignment" attribute="Normal" lineEndContext="#pop" >
           <IncludeRules context="#pop-if-line-separator" />
           <DetectChar   char="="         attribute="Operator" context="#pop!Expression"                         />
           <RegExpr      String="[A-Z]"   attribute="Variable" context="Inside Variable Name" insensitive="true" />
           <RegExpr      String="[^\s:]+" attribute="Error"    context="#stay"                                   />
      </context>
      
      <!-- INSIDE A SIMPLE VARIABLE NAME (CANNOT! BE AN ARRAY) -->
      <context name="Inside Simple Variable Name" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <StringDetect String="OR"       lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="AND"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="XOR"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="NOT"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="EQV"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="IMP"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="MOD"      lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="TO"       lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="STEP"     lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="GOTO"     lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="THEN"     lookAhead="true"     context="#pop"  insensitive="true" />
          <StringDetect String="ELSE"     lookAhead="true"     context="#pop"  insensitive="true" />
          <RegExpr      String="[A-Z0-9]" attribute="Variable" context="#stay" insensitive="true" />
          <AnyChar      String="$%!#"     attribute="Variable" context="#pop"                     />
          <DetectChar   char="("          attribute="Error"    context="Error Until Bracket"      />
      </context>
      
      <!-- INSIDE A VARIABLE NAME (CAN BE AN ARRAY) -->
      <context name="Inside Variable Name" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <DetectChar   char="(" attribute="Variable" context="#pop!Inside Array Subscript" />
          <IncludeRules context="Inside Simple Variable Name" />
      </context>
      
      <!-- INSIDE AN ARRAY SUBSCRIPT -->
      <context name="Inside Array Subscript" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Variable" context="#pop" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- INSIDE A STRING -->
      <context name="Inside String" attribute="String" lineEndContext="#pop" >
          <DetectChar char='"' attribute="String" context="#pop" />
      </context>
      
      <!-- INSIDE A REMARK (COMMENT) -->
      <context name="Inside Remark" attribute="Remark" lineEndContext="#pop" >
      </context>
      
      <!-- INSIDE A HEX NUMBER (&Hxxxx) -->
      <context name="Inside Hex Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <AnyChar String="0123456789ABCDEF" attribute="Hex Number" context="#stay" insensitive="true" />
      </context>
      
      <!-- INSIDE AN OCTAL NUMER (&Oxxxx) -->
      <context name="Inside Octal Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <AnyChar String="01234567" attribute="Octal Number" context="#stay" />
      </context>
      
      <!-- INSIDE A BINARY NUMBER (&Bxxxx) -->
      <context name="Inside Binary Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <AnyChar String="01" attribute="Octal Number" context="#stay" />
      </context>
      
      <!-- (#<file-number> | #<expression>) // the hash is optional -->
      <context name="File Number" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!File Number:Expr" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="#"     attribute="Number" context="#pop!File Number:Expr" />
          <DetectSpaces              attribute="Normal" context="#stay"                 />
      </context>
      <context name="File Number:Expr" lineEndContext="#pop" >
          <!-- escape to the "LEN" parameter of the OPEN command -->
          <StringDetect String="LEN" lookAhead="true" context="#pop" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      
<!--
==============================================================================================
                                     SPECIAL
==============================================================================================
-->
      
      <!-- POP IF LINE SEPARATOR IS FOUND -->
      <context name="#pop-if-line-separator" >
          <DetectChar   char=":"      lookAhead="true" context="#pop" />
          <DetectChar   char="'"      lookAhead="true" context="#pop" />
          <StringDetect String="ELSE" lookAhead="true" context="#pop" />
      </context>
      
      <!-- LINE FINISHED -->
      <context name="Line Finished" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Fatal Error" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectSpaces attribute="Normal" context="#stay" />
      </context>
      
      <!-- FATAL ERROR -->
      <context name="Fatal Error" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
      </context>
      
      <!-- ERROR UNTIL BRACKET -->
      <context name="Error Until Bracket" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char=")" attribute="Error" context="#pop" />
      </context>
      
      <!-- ERROR UNTIL COMMA -->
      <context name="Error Until Comma" attribute="Error" lineEndContext="#pop" >
          <IncludeRules context="#pop-if-line-separator" />
          <DetectChar   char="," lookAhead="true" context="#pop" />
      </context>
      
    </contexts>
    
<!--
==============================================================================================
                                     FONT STYLES
==============================================================================================
-->
    
    <itemDatas>
        <itemData name="Normal"         defStyleNum="dsNormal"       />
        <itemData name="Remark"         defStyleNum="dsComment"      />
        <itemData name="Error"          defStyleNum="dsError"        />
        <itemData name="Number"         defStyleNum="dsDecVal"       />
        <itemData name="Hex Number"     defStyleNum="dsBaseN"        />
        <itemData name="Octal Number"   defStyleNum="dsBaseN"        />
        <itemData name="Binary Number"  defStyleNum="dsBaseN"        />
        <itemData name="Line Number"    defStyleNum="dsPreprocessor" />
        <itemData name="String"         defStyleNum="dsString"       />
        <itemData name="Operator"       defStyleNum="dsOperator"     />
        <itemData name="Constant"       defStyleNum="dsConstant"     />
        <itemData name="Variable"       defStyleNum="dsVariable"     />
        <itemData name="Flow"           defStyleNum="dsControlFlow"  />
        <itemData name="Command"        defStyleNum="dsKeyword"      />
        <itemData name="Function"       defStyleNum="dsBuiltIn"      />
        <itemData name="User Function"  defStyleNum="dsFunction"     />
        <itemData name="Separator"      defStyleNum="dsNormal"       />
        <itemData name="Line Separator" defStyleNum="dsControlFlow"  />
    </itemDatas>
    
  </highlighting>
  <general>
    <keywords casesensitive="false" />
  </general>
</language>
<!-- kate: replace-tabs on; tab-width 2 -->
