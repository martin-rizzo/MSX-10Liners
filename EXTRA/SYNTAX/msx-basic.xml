<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language name="MSX-BASIC"
          section="Sources" 
          version="4"
          kateversion="5.0"
          extensions="*.bas;*.asc"
          priority="10"
          indenter="normal"
          author="Martin Rizzo (martinrizzo@gmail.com)"
          >

<!-- 

  Documentation:
      https://docs.kde.org/stable5/en/applications/katepart/highlight.html

-->
          
  <highlighting>

  
    <contexts>


      
      <context name="Normal" attribute="Unnumbered Line" lineEndContext="#stay">
          <RegExpr String="[0-9]{6,}"  attribute="Error"        context="Statements"   />
          <RegExpr String="[0-9]{0,5}" attribute="Line Number"  context="Statements"   />
      </context>
      
      <context name="Statements" attribute="Normal" lineEndContext="#pop" >
        <IncludeRules context="Commands" />
        <RegExpr String="[A-Z]"  lookAhead="true"  context="Assignment" insensitive="true" />
        <RegExpr String="[^\s:]" attribute="Error" context="#stay" />
      </context>
      



<!--
==============================================================================================
                               COMMANDS AND FUNCTIONS
==============================================================================================
-->

      <!-- COMMANDS -->
      <context name="Commands" >
        <StringDetect String="BEEP"     attribute="Command" context="Line Finished"          insensitive="true" />
        <StringDetect String="BLOAD"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="BSAVE"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <!-- CALL -->
        <StringDetect String="CIRCLE"   attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="CLEAR"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="CLOAD"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <!-- CLOAD? -->
        <StringDetect String="CLOSE"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="CLS"      attribute="Command" context="Line Finished"          insensitive="true" />
        <StringDetect String="COLOR"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="CSAVE"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="DATA"     attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="DEFDBL"   attribute="Command" context="Range of Letters"       insensitive="true" />
        <StringDetect String="DEFINT"   attribute="Command" context="Range of Letters"       insensitive="true" />
        <StringDetect String="DEFSNG"   attribute="Command" context="Range of Letters"       insensitive="true" />
        <StringDetect String="DEFSTR"   attribute="Command" context="Range of Letters"       insensitive="true" />
        <StringDetect String="DIM"      attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="DRAW"     attribute="Command" context="1 Command Parameter"    insensitive="true" />
        <StringDetect String="END"      attribute="Flow"    context="Line Finished"          insensitive="true" />
        <StringDetect String="ERASE"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="ERROR"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="FOR"      attribute="Flow"    context="For Parameters"         insensitive="true" />
        <StringDetect String="FILES"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <!-- FN -->
        <StringDetect String="GOSUB"    attribute="Flow"    context="Line Number"            insensitive="true" />
        <StringDetect String="GOTO"     attribute="Flow"    context="Line Number"            insensitive="true" />
        <StringDetect String="IF"       attribute="Flow"    context="If Parameters"          insensitive="true" />
        <StringDetect String="INPUT"    attribute="Command" context="Command Parameters"     insensitive="true" />
        <!-- INPUT# -->
        <StringDetect String="INTERVAL" attribute="Command" context="On Off Stop"            insensitive="true" />
        <StringDetect String="KEY"      attribute="Command" context="Key Parameters"         insensitive="true" />
        <StringDetect String="LET"      attribute="Command" context="Assignment"             insensitive="true" />
        <StringDetect String="LINE"     attribute="Command" context="Line Commands"          insensitive="true" />
        <StringDetect String="LIST"     attribute="Command" context="Line Number Range"      insensitive="true" />
        <StringDetect String="LLIST"    attribute="Command" context="Line Number Range"      insensitive="true" />
        <StringDetect String="LOAD"     attribute="Command" context="Command Parameters"     insensitive="true" />
        <StringDetect String="LOCATE"   attribute="Command" context="Command Parameters"     insensitive="true" />
        <!-- LPRINT -->
        
        <StringDetect String="NEXT"     attribute="Flow"    context="Var Parameters"         insensitive="true" />
        
        
        <StringDetect String="PLAY"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="POKE"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="PRESET"   attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <!-- PRINT -->
        <StringDetect String="PSET"     attribute="Command" context="Coord+Command Parameters" insensitive="true" />
        <StringDetect String="PUT"      attribute="Command" context="Put Commands"             insensitive="true" />
        <StringDetect String="READ"     attribute="Command" context="Var Parameters"           insensitive="true" />
        <StringDetect String="REM"      attribute="Remark"  context="Inside Remark"            insensitive="true" />
        <StringDetect String="RENUM"    attribute="Command" context="Line Number List"         insensitive="true" />
        <StringDetect String="RESTORE"  attribute="Command" context="Op Line Number"           insensitive="true" />
        <StringDetect String="RESUME"   attribute="Flow"    context="Op Line Number|Next"      insensitive="true" />
        <StringDetect String="RUN"      attribute="Command" context="1 Command Parameter"      insensitive="true" />
        <StringDetect String="SAVE"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SCREEN"   attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SOUND"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="SPRITE$(" attribute="Command" context="Index|Equal|Expression"   insenstivie="true" />
        <StringDetect String="SPRITE"   attribute="Command" context="On Off Stop"              insensitive="true" />
        <StringDetect String="STOP"     attribute="Command" context="On Off Stop"              insensitive="true" />
        <StringDetect String="STRIG("   attribute="Command" context="Index|On Off Stop"        insensitive="true" />
        <StringDetect String="SWAP"     attribute="Command" context="Var Parameters"           insensitive="true" />
        <StringDetect String="TROFF"    attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="TRON"     attribute="Command" context="Line Finished"            insensitive="true" />
        <StringDetect String="VPOKE"    attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="WAIT"     attribute="Command" context="Command Parameters"       insensitive="true" />
        <StringDetect String="WIDTH"    attribute="Command" context="1 Command Parameter"      insensitive="true" />
      </context>
      
      <context name="Line Commands" lineEndContext="#pop">
        <StringDetect String="INPUT"  attribute="Command" context="#pop!Hash+Command Parameters"  insensitive="true" />
        <AnyChar      String="-S("    lookAhead="true"    context="#pop!Coord+Command Parameters" insensitive="true" />
        <RegExpr      String="[^\s]"  attribute="Error"   context="#pop!Fatal Error"                                 />
      </context>
      
      <context name="Put Commands" lineEndContext="#pop">
        <DetectChar   char=":"         attribute="Error"   context="#pop"                                       />
        <StringDetect String="SPRITE"  attribute="Command" context="#pop!Command Parameters" insensitive="true" />
        <RegExpr      String="[^\s:]+" attribute="Error"   context="#stay"                                      />
      </context>
      
      
      
      
        <!--
        
MERGE			MSX1		
MID$()			MSX1		
MOTOR			MSX1		
NEW			MSX1		
ON...GOSUB		MSX1		
ON...GOTO		MSX1		
ON ERROR GOTO		MSX1		
ON INTERVAL GOSUB	MSX1		
ON KEY GOSUB		MSX1		
ON SPRITE GOSUB		MSX1		
ON STOP GOSUB		MSX1		
ON STRIG GOSUB		MSX1		
OPEN			MSX1		
OUT			MSX1		
PAINT			MSX1		
PLAY			MSX1		
        
        -->
        
        
        
      
      <!-- FUNCTIONS -->
      <context name="Functions" lineEndContext="#pop" >
        <StringDetect String="ABS("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="ASC("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="ATN("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="BASE("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="BIN$("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="CDBL("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="CHR$("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="CINT("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="COS("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="CSNG("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="EOF("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="EXP("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="FIX("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="FRE("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="HEX$("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="INP("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="INPUT$("  attribute="Function" context="Function Parameters"  insensitive="true" />
        <StringDetect String="INSTR("   attribute="Function" context="Function Parameters"  insensitive="true" />
        <StringDetect String="INT("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="LEFT$("   attribute="Function" context="Function Parameters"  insensitive="true" />
        <StringDetect String="LEN("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="LOG("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="LPOS("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="MID$("    attribute="Function" context="Function Parameters"  insensitive="true" />
        <StringDetect String="OCT$("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="PAD("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="PDL("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="PEEK("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="PLAY("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="POINT"    attribute="Function" context="Coord"                insensitive="true" />
        <StringDetect String="POS("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="RIGHT$("  attribute="Function" context="Function Parameters"  insensitive="true" />
        <StringDetect String="RND("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="SGN("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="SIN("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="SPACE$("  attribute="Function" context="1 Function Parameter" insensitive="true" />
        <!-- SPC ?? -->
        <StringDetect String="SPRITE$(" attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="SQR("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="STICK("   attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="STR$("    attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="STRIG("   attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="STRING$(" attribute="Function" context="Function Parameters"  insensitive="true" />
        <!-- TAB ?? -->
        <StringDetect String="TAN("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <!-- USR<Number>(x) -->
        <StringDetect String="VAL("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <!-- VARPTR(<VariableName>) VARPTR(#<FileNumber>) -->
        <StringDetect String="VDP("     attribute="Function" context="1 Function Parameter" insensitive="true" />
        <StringDetect String="VPEEK("   attribute="Function" context="1 Function Parameter" insensitive="true" />
      </context>
      
<!--
==============================================================================================
                                   PARAMETERS
==============================================================================================
-->
      
      <!-- NO PARAMETERS -->
      <context name="No Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator" context="#pop" />
          <RegExpr String="\S+" attribute="Error" context="#stay" />
      </context>
      
      <!-- VAR PARAMETERS (MULTIPLE PARAMETERS BUT ALL OF THEM ARE VARIABLE NAMES) -->
      <context name="Var Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"            attribute="Line Separator" context="#pop"                                    />
          <DetectChar char=","            attribute="Normal"         context="#stay"                                   />
          <RegExpr    String="[A-Z]"      attribute="Variable"       context="Inside Variable Name" insensitive="true" />
          <RegExpr    String="[^\s:,]+"   attribute="Error"          context="#stay"                                   />
      </context>
      
      <!-- KEY PARAMETERS (USED ONLY IN THE "KEY" COMMAND) -->
      <context name="Key Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar   char=":"         attribute="Line Separator" context="#pop" />
          <StringDetect String="ON"      attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="OFF"     attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="LIST"    attribute="Constant"       context="#stay" insensitive="true" />
          <DetectChar   char="("         attribute="Command"        context="#pop!Index|On Off Stop"   />
          <RegExpr      String="[0-9]+"  attribute="Normal"         context="#pop!Command Parameters"  />
          <RegExpr      String="[^\s:]+" attribute="Error"          context="#stay" />
      </context>
      
      <!-- COMMAND PARAMETERS -->
      <context name="Command Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator"      context="#pop"  />
          <DetectChar char="," attribute="Parameter Separator" context="#stay" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- COMMAND PARAMETERS (ONLY ONE PARAMETER) -->
      <context name="1 Command Parameter" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator"   context="#pop" />
          <DetectChar char="," attribute="Error"            context="#pop!Fatal Error" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- STEP(x,y)-STEP(x,y) #pop -->
      <context name="Coord" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <DetectChar   char=":"        attribute="Line Separator" context="#pop"                />
          <DetectSpaces                 attribute="Normal"         context="#stay"               />
          <StringDetect String="STEP("  attribute="Function"       context="Function Parameters" />
          <StringDetect String="("      attribute="Function"       context="Function Parameters" />
          <DetectChar   char="-"        attribute="Function"       context="#stay"               />
      </context>
      
      <!-- STEP(x,y)-STEP(x,y) & COMMAND PARAMETERS #pop -->
      <context name="Coord+Command Parameters" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop!Command Parameters" >
          <IncludeRules context="Coord" />
      </context>
      
      <!-- OPTIONAL "#" + COMMAND PARAMETERS -->
      <context name="Hash+Command Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char="#"       attribute="Number" context="#pop!Command Parameters" />
          <RegExpr    String="[^\s]" lookAhead="true"   context="#pop!Command Parameters" />
      </context>
      
      <!-- FUNCTION PARAMETERS -->
      <context name="Function Parameters" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Function"            context="#pop" />
          <DetectChar char=":" attribute="Error"               context="#pop" />
          <DetectChar char="," attribute="Parameter Separator" context="#stay" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- FUNCTION PARAMETERS (ONLY ONE PARAMETER) -->
      <context name="1 Function Parameter" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Function" context="#pop"     />
          <DetectChar char=":" attribute="Error"    context="#pop#pop" />
          <DetectChar char="," attribute="Error"    context="#pop!Error Until Bracket" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- ON / OFF / STOP PARAMETERS -->
      <context name="On Off Stop" attribute="Normal" lineEndContext="#pop" >
          <DetectChar   char=":"         attribute="Line Separator" context="#pop" />
          <StringDetect String="ON"      attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="OFF"     attribute="Constant"       context="#stay" insensitive="true" />
          <StringDetect String="STOP"    attribute="Constant"       context="#stay" insensitive="true" />
          <RegExpr      String="[^\s:]+" attribute="Error"          context="#stay" />
      </context>
      
      <!-- (INDEX) ON / OFF / STOP PARAMETERS -->
      <context name="Index|On Off Stop" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Command" context="#pop!On Off Stop" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- (INDEX) = EXPRESSION -->
      <context name="Index|Equal|Expression" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Command" context="#pop!Equal|Expression" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- LINE NUMBER (AS THE ONLY PARAMETER) -->
      <context name="Line Number" attribute="Normal" lineEndContext="#pop"  >
          <DetectChar char=":"            attribute="Error"       context="#pop"               />
          <RegExpr    String="[0-9]{6,}"  attribute="Error"       context="#pop!Fatal Error"   />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number" context="#pop!Line Finished" />
          <RegExpr    String="[^\s:]+"    attribute="Error"       context="#pop!Fatal Error"   />
      </context>
      
      <!-- LINE NUMBER LIST (LINE1, LINE2, LINE3, ...) -->
      <context name="Line Number List" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"            attribute="Line Separator" context="#pop"  />
          <DetectChar char=","            attribute="Operator"       context="#stay" />
          <RegExpr    String="[0-9]{6,}"  attribute="Error"          context="#stay" />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number"    context="#stay" />
          <RegExpr    String="[^\s:,]+"   attribute="Error"          context="#stay" />
      </context>
      
      <!-- LINE NUMBER RANGE (START - END) -->
      <context name="Line Number Range" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"            attribute="Line Separator" context="#pop"  />
          <DetectChar char="-"            attribute="Operator"       context="#stay" />
          <RegExpr    String="[0-9]{6,}"  attribute="Error"          context="#stay" />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number"    context="#stay" />
          <RegExpr    String="[^\s:-]+"   attribute="Error"          context="#stay" />
      </context>
      
      <!-- OPTIONAL LINE NUMBER (AS THE ONLY PARAMETER) -->
      <context name="Op Line Number" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator" context="#pop" />
          <IncludeRules context="Line Number" />
      </context>
      
      <!-- OPTIONAL LINE NUMBER OR "NEXT" (AS THE ONLY PARAMETER) -->
      <context name="Op Line Number|Next" attribute="Normal" lineEndContext="#pop" >
          <StringDetect String="NEXT"  attribute="Constant" context="#pop!Line Finished" insensitive="true" />
          <IncludeRules context="Op Line Number" />
      </context>
      
      <!-- RANGE OF LETTERS PARAMETERS (EXAMPLE: I-N,W-Z) -->
      <context name="Range of Letters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator" context="#pop"  />
          <DetectChar char="-" attribute="Operator" context="#stay" />
          <AnyChar String="ABCDEFGHIJKLMNOPQRSTUVWXYZ" attribute="Char" context="#stay" />
      </context>
      
      <!-- "FOR" PARAMETERS (INCLUDING "TO" & "STEP") -->
      <context name="For Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"         attribute="Error"    context="#pop"                                           />
          <DetectChar char="="         attribute="Operator" context="#pop!For Start"                                 />
          <RegExpr    String="[A-Z]"   attribute="Variable" context="Inside Simple Variable Name" insensitive="true" />
          <RegExpr    String="[^\s:]+" attribute="Error"    context="#stay"                                          />
      </context>
      <context name="For Start" attribute="Normal" lineEndContext="#pop" >
          <DetectChar   char=":"    attribute="Error"     context="#pop"                            />
          <DetectChar   char="="    attribute="Error"     context="#stay"                           />
          <StringDetect String="TO" attribute="Flow" context="#pop!For End" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      <context name="For End" attribute="Normal" lineEndContext="#pop" >
          <DetectChar   char=":"      attribute="Line Separator" context="#pop"                          />
          <StringDetect String="STEP" attribute="Flow"      context="#pop!Expression" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- "IF" PARAMETERS (INCLUDING "THEN/GOTO" & "ELSE") -->
      <context name="If Parameters" attribute="Normal" lineEndContext="#pop" >
          <DetectChar   char=":"      attribute="Error" context="#pop" />
          <StringDetect String="THEN" attribute="Flow"  context="#pop"         insensitive="true" />
          <StringDetect String="GOTO" attribute="Flow"  context="#pop!If Goto" insensitive="true" />
          <IncludeRules context="Expression" />
      </context>
      <context name="If Goto" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"            attribute="Error"       context="#pop"               />
          <RegExpr    String="[0-9]{6,}"  attribute="Error"       context="#pop!Line Finished" />
          <RegExpr    String="[0-9]{0,5}" attribute="Line Number" context="#pop!Line Finished" />
          <RegExpr    String="[^\s:]+"    attribute="Error"       context="#pop!Fatal Error"   />
      </context>
      
<!--
==============================================================================================
                                   EXPRESSIONS
==============================================================================================
-->
      
      <!-- OPERATORS -->
      <!-- it's only to be included in other contexts -->
      <context name="Operators" >
          <AnyChar String="+-*/^\=&lt;&gt;" attribute="Operator" context="#stay" />
          <StringDetect String="OR"  attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="AND" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="XOR" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="NOT" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="EQV" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="IMP" attribute="Operator" context="#stay" insensitive="true" />
          <StringDetect String="MOD" attribute="Operator" context="#stay" insensitive="true" />
      </context>
      
      <!-- EXPRESSION -->
      <context name="Expression" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator" context="#pop"       />
          <DetectChar char=")" attribute="Operator"       context="#pop"       />
          <DetectChar char="(" attribute="Operator"       context="Expression" />
          <IncludeRules context="Operators" />
          <IncludeRules context="Functions" />
          <RegExpr    String="[+-]?[0-9]*\.?[0-9]+([ED][-+]?[0-9]+)?[#!]?" attribute="Number"   context="#stay"                insensitive="true" />
          <RegExpr    String="[A-Z]"                                       attribute="Variable" context="Inside Variable Name" insensitive="true" />
          <DetectChar char='"'                                             attribute="String"   context="Inside String"                           />
      </context>
      
      <!-- "= EXPRESSION" -->
      <context name="Equal|Expression" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=":"         attribute="Error"    context="#pop"            />
          <DetectChar char="="         attribute="Operator" context="#pop!Expression" />
          <DetectChar String="[^\s:]+" attribute="Error"    context="#stay" />
      </context>
      
      <!-- ASSIGNMENT -->
      <context name="Assignment" attribute="Normal" lineEndContext="#pop" >
           <DetectChar char=":"         attribute="Error"    context="#pop"                                    />
           <DetectChar char="="         attribute="Operator" context="#pop!Expression"                         />
           <RegExpr    String="[A-Z]"   attribute="Variable" context="Inside Variable Name" insensitive="true" />
           <RegExpr    String="[^\s:]+" attribute="Error"    context="#stay"                                   />
      </context>
      
      <!-- INSIDE A SIMPLE VARIABLE NAME (CANNOT! BE AN ARRAY) -->
      <context name="Inside Simple Variable Name" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <StringDetect String="OR"       lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="AND"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="XOR"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="NOT"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="EQV"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="IMP"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="MOD"      lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="TO"       lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="STEP"     lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="GOTO"     lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="THEN"     lookAhead="true"     context="#pop" insensitive="true"     />
          <StringDetect String="ELSE"     lookAhead="true"     context="#pop" insensitive="true"     />
          <AnyChar      String="$%!#"     attribute="Variable" context="#pop"                        />
          <DetectChar   char="("          attribute="Error"    context="Error Until Bracket"         />
          <RegExpr      String="[A-Z0-9]" attribute="Variable" context="#stay" insensitive="true"    />
      </context>
      
      <!-- INSIDE A VARIABLE NAME (CAN BE AN ARRAY) -->
      <context name="Inside Variable Name" attribute="Normal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop" >
          <DetectChar char="(" attribute="Variable" context="#pop!Inside Array Subscript" />
          <IncludeRules context="Inside Simple Variable Name" />
      </context>
      
      <!-- INSIDE AN ARRAY SUBSCRIPT -->
      <context name="Inside Array Subscript" attribute="Normal" lineEndContext="#pop" >
          <DetectChar char=")" attribute="Variable" context="#pop" />
          <IncludeRules context="Expression" />
      </context>
      
      <!-- INSIDE A STRING -->
      <context name="Inside String" attribute="String" lineEndContext="#pop" >
          <DetectChar char='"' attribute="String" context="#pop" />
      </context>
      
      <!-- INSIDE A REMARK (COMMENT) -->
      <context name="Inside Remark" attribute="Remark" lineEndContext="#pop" >
      </context>
      

<!--
==============================================================================================
                                     SPECIAL
==============================================================================================
-->
      
      <!-- LINE FINISHED -->
      <context name="Line Finished" attribute="Normal Text" lineEndContext="#pop" >
          <DetectChar char=":"         attribute="Line Separator" context="#pop"  />
          <RegExpr    String="[^\s:]+" attribute="Error"          context="#stay" />
      </context>
      
      <!-- FATAL ERROR -->
      <context name="Fatal Error" attribute="Error" lineEndContext="#pop" >
          <DetectChar char=":" attribute="Line Separator" context="#pop" />
      </context>
      
      <!-- ERROR UNTIL BRACKET -->
      <context name="Error Until Bracket" attribute="Error" lineEndContext="#pop" >
          <DetectChar   char=")" attribute="Error" context="#pop" />
      </context>
      
      <!-- ERROR UNTIL COMMA -->
      <context name="Error Until Comma" attribute="Error" lineEndContext="#pop" >
          <DetectChar char=":"  lookAhead="true" context="#pop" />
          <DetectChar char=","  lookAhead="true" context="#pop" />
      </context>
      

    </contexts>
    <itemDatas>
      <itemData name="Normal"              defStyleNum="dsNormal"       />
      <itemData name="Normal Text"         defStyleNum="dsNormal"       />
      <itemData name="Char"                defStyleNum="dsChar"         />
      <itemData name="Command"             defStyleNum="dsBuiltIn"      />
      <itemData name="Keyword"             defStyleNum="dsKeyword"      />
      <itemData name="Operator"            defStyleNum="dsOperator"     />
      <itemData name="Number"              defStyleNum="dsDecVal"       />
      <itemData name="Variable"            defStyleNum="dsVariable"     />
      <itemData name="Constant"            defStyleNum="dsConstant"     />
      <itemData name="Function"            defStyleNum="dsFunction"     />
      <itemData name="Remark"              defStyleNum="dsComment"      />
      <itemData name="Flow"                defStyleNum="dsControlFlow"  />
      <itemData name="Line Number"         defStyleNum="dsPreprocessor" />
      <itemData name="Line Separator"      defStyleNum="dsPreprocessor" bold="true" />
      <itemData name="Parameter Separator" defStyleNum="dsNormal"       />
      
      <itemData name="Unnumbered Line" defStyleNum="dsNormal" />
      <itemData name="Error"           defStyleNum="dsError" />
    
      <itemData name="Code"        defStyleNum="dsNormal"  />
      <itemData name="Hex"         defStyleNum="dsBaseN"   />
      <itemData name="String"      defStyleNum="dsString" />
    </itemDatas>
  </highlighting>
  <general>
    <keywords casesensitive="false" />
  </general>
</language>
<!-- kate: replace-tabs on; tab-width 2 -->
